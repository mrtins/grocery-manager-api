generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id           Int        @id(map: "pk_category") @default(autoincrement())
  userId       Int        @map("user_id")
  categoryName String     @map("category_name") @db.VarChar(30)
  description  String?    @db.VarChar(220)
  user         User       @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_category_user")
  products     Product[]
  purchases    Purchase[]

  @@map("category")
}

model Product {
  id            Int            @id(map: "pk_product") @default(autoincrement())
  userId        Int            @map("user_id")
  categoryId    Int            @map("category_id")
  sizeMeasureId Int            @map("size_measure_id")
  productName   String         @map("product_name") @db.VarChar(40)
  brandName     String?        @map("brand_name") @db.VarChar(220)
  averagePrice  Decimal?       @db.Decimal(12, 2)
  category      Category       @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_product_category")
  sizeMeasure   SizeMeasure    @relation(fields: [sizeMeasureId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_product_size_measure")
  user          User           @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_product_user")
  productOrders ProductOrder[]

  @@map("product")
}

model ProductOrder {
  id          Int      @id(map: "pk_product_order") @default(autoincrement())
  userId      Int      @map("user_id")
  productId   Int      @map("product_id")
  purchaseId  Int      @map("purchase_id")
  brandName   String?  @map("brand_name") @db.VarChar(220)
  price       Decimal  @db.Decimal(12, 2)
  productSize Decimal  @db.Decimal(12, 3)
  product     Product  @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_product_order_product")
  purchase    Purchase @relation(fields: [purchaseId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_product_order_purchase")
  user        User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_product_order_user")

  @@map("product_order")
}

model Purchase {
  id               Int            @id(map: "pk_purchase") @default(autoincrement())
  userId           Int            @map("user_id")
  storeId          Int?           @map("store_id")
  purchaseDateTime DateTime?      @map("purchase_date_time") @db.Timestamp(6)
  totalCost        Decimal?       @db.Decimal(12, 2)
  totalDiscount    Decimal?       @db.Decimal(12, 2)
  category         Category?      @relation(fields: [storeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_purchase_store")
  user             User           @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_purchase_user_group")
  productOrders    ProductOrder[]

  @@map("purchase")
}

model SizeMeasure {
  id       Int       @id(map: "pk_size_measure") @default(autoincrement())
  measure  String    @db.VarChar(15)
  products Product[]

  @@map("size_measure")
}

model Store {
  id        Int    @id(map: "pk_store") @default(autoincrement())
  userId    Int    @map("user_id")
  storeName String @map("store_name") @db.VarChar(40)
  user      User   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_store_user")

  @@map("store")
}

model User {
  id            Int            @id(map: "pk_user") @default(autoincrement())
  firstName     String         @map("first_name") @db.VarChar(20)
  lastName      String?        @map("last_name") @db.VarChar(60)
  email         String         @unique @db.VarChar(60)
  categories    Category[]
  products      Product[]
  productOrders ProductOrder[]
  purchases     Purchase[]
  stores        Store[]

  @@map("user")
}
